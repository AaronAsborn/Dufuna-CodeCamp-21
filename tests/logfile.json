{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 2,
    "pending": 0,
    "failures": 3,
    "start": "2021-06-03T09:30:54.481Z",
    "end": "2021-06-03T09:30:57.864Z",
    "duration": 3383,
    "testsRegistered": 5,
    "passPercent": 40,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2a5f9d89-8e9c-4773-b6bb-b4210614e55a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5c04810-be1b-4a6e-91f9-100b8a33b8c1",
          "title": "Testing Form Task",
          "fullFile": "C:\\Users\\morta\\desktop\\Dufuna-CodeCamp-21\\tests\\html_forms\\html_form.js",
          "file": "\\html_form.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver in \"Testing Form Task\"",
              "fullTitle": "Testing Form Task \"before all\" hook: setupWebdriver in \"Testing Form Task\"",
              "timedOut": false,
              "duration": 2789,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {},
              "uuid": "bdaa5b8c-b711-4631-9553-335021cb22df",
              "parentUUID": "a5c04810-be1b-4a6e-91f9-100b8a33b8c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Form Task\"",
              "fullTitle": "Testing Form Task \"after all\" hook in \"Testing Form Task\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "1e9926a5-77a7-49ee-8f30-b9fd8c831113",
              "parentUUID": "a5c04810-be1b-4a6e-91f9-100b8a33b8c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: assert 4 input fields are present",
              "fullTitle": "Testing Form Task test case: assert 4 input fields are present",
              "timedOut": false,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 4, `Ensure you have all the input fields in the order stated in the task criteria`);",
              "err": {},
              "uuid": "bf05a7e4-d3f8-48d9-b585-b3244d333b1b",
              "parentUUID": "a5c04810-be1b-4a6e-91f9-100b8a33b8c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: Full Name label is present",
              "fullTitle": "Testing Form Task test case: Full Name label is present",
              "timedOut": false,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"label\"));\nconst text = await name.getText();\nconst fullname = await text.toLowerCase();\nassert.equal(fullname, \"full name\", `Ensure \"Full Name\" label is present`);",
              "err": {},
              "uuid": "d3cdae3a-fea7-4ad5-991c-730e52bc794e",
              "parentUUID": "a5c04810-be1b-4a6e-91f9-100b8a33b8c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: Email label is present",
              "fullTitle": "Testing Form Task test case: Email label is present",
              "timedOut": false,
              "duration": 61,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"label\"));\nconst text = await name.getText();\nconst email = await text.toLowerCase();\nassert.equal(email, \"email\", `Ensure \"Email\" label is present`);\ndone();",
              "err": {
                "message": "AssertionError: Ensure \"Email\" label is present: expected 'full name' to equal 'email'",
                "estack": "AssertionError: Ensure \"Email\" label is present: expected 'full name' to equal 'email'\n    at Context.<anonymous> (html_form.js:38:16)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                "diff": "- full name\n+ email\n"
              },
              "uuid": "94c2ae4e-a75e-48f0-81b5-b832dfc49045",
              "parentUUID": "a5c04810-be1b-4a6e-91f9-100b8a33b8c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: Subject label is present",
              "fullTitle": "Testing Form Task test case: Subject label is present",
              "timedOut": false,
              "duration": 60,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"label\"));\nconst text = await name.getText();\nconst subject = await text.toLowerCase();\nassert.equal(subject, \"subject\", `Ensure \"Subject\" label is present`);\ndone();",
              "err": {
                "message": "AssertionError: Ensure \"Subject\" label is present: expected 'full name' to equal 'subject'",
                "estack": "AssertionError: Ensure \"Subject\" label is present: expected 'full name' to equal 'subject'\n    at Context.<anonymous> (html_form.js:46:16)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                "diff": "- full name\n+ subject\n"
              },
              "uuid": "0643651d-63ae-4a5a-92f5-102f6afe95e0",
              "parentUUID": "a5c04810-be1b-4a6e-91f9-100b8a33b8c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: Message label is present",
              "fullTitle": "Testing Form Task test case: Message label is present",
              "timedOut": false,
              "duration": 48,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"label\"));\nconst text = await name.getText();\nconst message = await text.toLowerCase();\nassert.equal(message, \"message\", `Ensure \"Message\" label is present`);\ndone();",
              "err": {
                "message": "AssertionError: Ensure \"Message\" label is present: expected 'full name' to equal 'message'",
                "estack": "AssertionError: Ensure \"Message\" label is present: expected 'full name' to equal 'message'\n    at Context.<anonymous> (html_form.js:54:16)\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)",
                "diff": "- full name\n+ message\n"
              },
              "uuid": "d2a278d8-d1fe-46a5-93a3-3727451ebdeb",
              "parentUUID": "a5c04810-be1b-4a6e-91f9-100b8a33b8c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf05a7e4-d3f8-48d9-b585-b3244d333b1b",
            "d3cdae3a-fea7-4ad5-991c-730e52bc794e"
          ],
          "failures": [
            "94c2ae4e-a75e-48f0-81b5-b832dfc49045",
            "0643651d-63ae-4a5a-92f5-102f6afe95e0",
            "d2a278d8-d1fe-46a5-93a3-3727451ebdeb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/morta/desktop/Dufuna-CodeCamp-21/tests/html_forms/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "5.2.0"
    }
  }
}