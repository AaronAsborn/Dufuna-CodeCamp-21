{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2021-10-02T03:45:29.401Z",
    "end": "2021-10-02T03:48:29.434Z",
    "duration": 180033,
    "testsRegistered": 18,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 18,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "25830a59-1549-4eda-9043-bc8499525a11",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
          "title": "Testing Scholars Project",
          "fullFile": "C:\\Users\\Wale\\Documents\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js",
          "file": "\\landing_page.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver for \"test case: FoodBag Logo is present\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver for \"test case: FoodBag Logo is present\"",
              "timedOut": true,
              "duration": 180013,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {
                "message": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Wale\\Documents\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js)",
                "estack": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Wale\\Documents\\Dufuna-CodeCamp-21\\tests\\landing_page\\landing_page.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                "diff": null
              },
              "uuid": "5423ed91-21f8-4a99-b98b-3e2bc0a6dc59",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "f164f409-4154-49f2-8492-f1cbcccdc987",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Food\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "b1f2a9b6-0c25-42b2-9e68-d21cfa274dc8",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "f7161fa2-143b-40c7-a31f-d9cefe59054c",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "70a6c1d5-1945-4eaf-affd-f7ee83b9de42",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "f0caf771-8f5a-4bde-9833-462c02cb207b",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "64eaa5f6-e03e-44c5-9b8f-8e42e49ccd62",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check Sign up",
              "fullTitle": "Testing Scholars Project test case: check Sign up",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Sign up\", \"Ensure the `Sign up` link is present on the header\");",
              "err": {},
              "uuid": "5d791760-3ab7-4886-9710-c0af1caa4bd6",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-descrption1",
              "fullTitle": "Testing Scholars Project test case: check service-descrption1",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Pick an interest\", \"Ensure Quantity label is present\");",
              "err": {},
              "uuid": "0f9939ca-2d41-4aed-ad32-3f9d45e68d98",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-description2",
              "fullTitle": "Testing Scholars Project test case: check service-description2",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"How we serve you\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "319f5723-9ac4-4966-bea1-4b5e202cfce2",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service title-1",
              "fullTitle": "Testing Scholars Project test case: check service title-1",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us where you are\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "490b2bb3-495e-473c-b92d-9166efdc31e4",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-title-2",
              "fullTitle": "Testing Scholars Project test case: check service-title-2",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us what you want\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "fac66207-f711-44bc-b682-fcf3339f607c",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check service-title-3",
              "fullTitle": "Testing Scholars Project test case: check service-title-3",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"We'll come running\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "da790cd6-6bcd-4bb5-930e-792dd6b3d1ad",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check footer",
              "fullTitle": "Testing Scholars Project test case: check footer",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Contact us\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "197f1994-495d-4e48-97a5-4a69d94bdd7c",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check terms & conditions on footer",
              "fullTitle": "Testing Scholars Project test case: check terms & conditions on footer",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Terms & Conditions . Privacy Policy\", \"Ensure the texts on the footer is properly formated\");",
              "err": {},
              "uuid": "ae6cf32a-375f-40b6-8b2a-488a2c90a409",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check copyright on footer",
              "fullTitle": "Testing Scholars Project test case: check copyright on footer",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Copyright 2021 FoodBag is a registered trademark\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "bebed4a1-c886-48d1-b58c-e168d57323de",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check input field",
              "fullTitle": "Testing Scholars Project test case: check input field",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 1, `Ensure you have the input field as seen in the mock-up`);",
              "err": {},
              "uuid": "3b6c2d34-6b70-4061-9733-3c7dbea1e518",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check placeholder",
              "fullTitle": "Testing Scholars Project test case: check placeholder",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('placeholder');\nassert.equal(element, \"Enter your delivery address\", `Ensure you have the placeholder as seen in the mock-up`);",
              "err": {},
              "uuid": "865c61ab-6f36-4bca-8fbc-72b73efdf6e8",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check label of input-field",
              "fullTitle": "Testing Scholars Project test case: check label of input-field",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('body')).getText();\nassert.include(element, \"Where are you?\", `Ensure you have the input field as the appropriate label as seen in the mock-up`);",
              "err": {},
              "uuid": "8f938ef1-a17d-4f31-aceb-5d7b7f5c42bc",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: assert image amount is 10",
              "fullTitle": "Testing Scholars Project test case: assert image amount is 10",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const images = await driver.findElements(By.css('img'));\nconst size = images.length\nassert.equal(size, 10, `Ensure all the images are present on the page`);",
              "err": {},
              "uuid": "e425b56d-8ab9-4c87-8dd1-222e621208ae",
              "parentUUID": "b50f00bf-de50-4a5d-af94-17bd626e66c6",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b1f2a9b6-0c25-42b2-9e68-d21cfa274dc8",
            "f7161fa2-143b-40c7-a31f-d9cefe59054c",
            "70a6c1d5-1945-4eaf-affd-f7ee83b9de42",
            "f0caf771-8f5a-4bde-9833-462c02cb207b",
            "64eaa5f6-e03e-44c5-9b8f-8e42e49ccd62",
            "5d791760-3ab7-4886-9710-c0af1caa4bd6",
            "0f9939ca-2d41-4aed-ad32-3f9d45e68d98",
            "319f5723-9ac4-4966-bea1-4b5e202cfce2",
            "490b2bb3-495e-473c-b92d-9166efdc31e4",
            "fac66207-f711-44bc-b682-fcf3339f607c",
            "da790cd6-6bcd-4bb5-930e-792dd6b3d1ad",
            "197f1994-495d-4e48-97a5-4a69d94bdd7c",
            "ae6cf32a-375f-40b6-8b2a-488a2c90a409",
            "bebed4a1-c886-48d1-b58c-e168d57323de",
            "3b6c2d34-6b70-4061-9733-3c7dbea1e518",
            "865c61ab-6f36-4bca-8fbc-72b73efdf6e8",
            "8f938ef1-a17d-4f31-aceb-5d7b7f5c42bc",
            "e425b56d-8ab9-4c87-8dd1-222e621208ae"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/Wale/Documents/Dufuna-CodeCamp-21/tests/landing_page/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "5.2.0"
    }
  }
}