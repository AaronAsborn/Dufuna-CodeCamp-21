{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-14T14:41:33.673Z",
    "end": "2022-02-14T14:44:33.850Z",
    "duration": 180177,
    "testsRegistered": 2,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 2,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "6eee564d-71a0-4e41-a99e-5c98cce21061",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e0c2b52d-2a2c-4a68-a1ca-22e48a8d2c2d",
          "title": "Printing product price",
          "fullFile": "C:\\Users\\user\\Documents\\GitHub\\Dufuna-CodeCamp-21\\tests\\product_price_printing\\test.js",
          "file": "\\test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver for \"test case: check product details\"",
              "fullTitle": "Printing product price \"before all\" hook: setupWebdriver for \"test case: check product details\"",
              "timedOut": true,
              "duration": 180001,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {
                "message": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\user\\Documents\\GitHub\\Dufuna-CodeCamp-21\\tests\\product_price_printing\\test.js)",
                "estack": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\user\\Documents\\GitHub\\Dufuna-CodeCamp-21\\tests\\product_price_printing\\test.js)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
                "diff": null
              },
              "uuid": "5a9fbd40-22d0-4ccf-894f-7930083392f0",
              "parentUUID": "e0c2b52d-2a2c-4a68-a1ca-22e48a8d2c2d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Printing product price\"",
              "fullTitle": "Printing product price \"after all\" hook in \"Printing product price\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "17c8f879-5727-4a19-8eaf-6776aba75282",
              "parentUUID": "e0c2b52d-2a2c-4a68-a1ca-22e48a8d2c2d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: check product details",
              "fullTitle": "Printing product price test case: check product details",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"));\nconst text = await element.getText();\nassert.include(\n  text,\n  \"is sold for\",\n  \"Ensure you print out the value in the right format\"\n);",
              "err": {},
              "uuid": "b2e25838-6ff5-41dd-9643-c59943177422",
              "parentUUID": "e0c2b52d-2a2c-4a68-a1ca-22e48a8d2c2d",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check three arrays are present",
              "fullTitle": "Printing product price test case: check three arrays are present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"));\nconst text = await element.getText();\nconst count = text.split(\"is sold for\").length - 1;\nassert.equal(count, 3, \"Ensure the array contains 3 objects\");",
              "err": {},
              "uuid": "b8af1729-f170-402d-a555-ca61e44db320",
              "parentUUID": "e0c2b52d-2a2c-4a68-a1ca-22e48a8d2c2d",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b2e25838-6ff5-41dd-9643-c59943177422",
            "b8af1729-f170-402d-a555-ca61e44db320"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/user/Documents/GitHub/Dufuna-CodeCamp-21/tests/product_price_printing/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.0.1"
    }
  }
}