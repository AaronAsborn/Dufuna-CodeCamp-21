{
  "stats": {
    "suites": 1,
    "tests": 18,
    "passes": 15,
    "pending": 0,
    "failures": 3,
    "start": "2021-06-17T14:03:14.282Z",
    "end": "2021-06-17T14:03:22.591Z",
    "duration": 8309,
    "testsRegistered": 18,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "de5a3202-4dd7-4fca-8662-849020258d0e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
          "title": "Testing Scholars Project",
          "fullFile": "/Users/jeffkayombo/Desktop/Dufuna-CodeCamp-21/tests/landing_page/landing_page.js",
          "file": "/landing_page.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 7745,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {},
              "uuid": "3920d67e-97f2-47d9-893b-1f9417e92820",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "1a21d1c1-432f-45ac-997e-9409324b98b0",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Food\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "2808b933-b93e-4b04-bcc9-3e4147fbb882",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "d9f358b0-3a8e-4388-b376-cb3aafcef050",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "391dc22d-e20a-47c0-afd3-2f4138707ab3",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "adc77a4b-a1cd-4750-8379-3fe5b82fd1b3",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "b1385f3a-fa89-458f-830d-6dd39811eef5",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Sign up",
              "fullTitle": "Testing Scholars Project test case: check Sign up",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Sign up\", \"Ensure the `Sign up` link is present on the header\");",
              "err": {},
              "uuid": "50247d7b-4a18-4d2b-8517-b9f3062af945",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-descrption1",
              "fullTitle": "Testing Scholars Project test case: check service-descrption1",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Pick an interest\", \"Ensure Quantity label is present\");",
              "err": {},
              "uuid": "8d8deb64-eb12-4a3b-8a0e-fcd4d927675b",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-description2",
              "fullTitle": "Testing Scholars Project test case: check service-description2",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"How we serve you\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "c99250f1-abc6-4d42-bdbc-cd48137453c4",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service title-1",
              "fullTitle": "Testing Scholars Project test case: check service title-1",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us where you are\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "176cbd17-2212-4359-843e-308890fe4901",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-2",
              "fullTitle": "Testing Scholars Project test case: check service-title-2",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us what you want\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "3e15437a-88b4-4753-9a1b-7cb181a768f8",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-3",
              "fullTitle": "Testing Scholars Project test case: check service-title-3",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"We'll come running\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "1f86ee9c-163d-4303-804e-a10bcadcb9ff",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check footer",
              "fullTitle": "Testing Scholars Project test case: check footer",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Contact us\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "5af0be59-e36c-4856-ad54-2a8767243b57",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check terms & conditions on footer",
              "fullTitle": "Testing Scholars Project test case: check terms & conditions on footer",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Terms & Conditions . Privacy Policy\", \"Ensure the texts on the footer is properly formated\");",
              "err": {},
              "uuid": "2e06b21c-a45f-4269-a903-b129db8862d8",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check copyright on footer",
              "fullTitle": "Testing Scholars Project test case: check copyright on footer",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"© Copyright 2021 FoodBag is a registered trademark\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {},
              "uuid": "e1c3057c-ae2b-48a1-ae1c-9161d63ccb51",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert input field is present",
              "fullTitle": "Testing Scholars Project test case: assert input field is present",
              "timedOut": false,
              "duration": 13,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 1, `Ensure you have the input field as seen in the mock-up`);",
              "err": {
                "message": "AssertionError: Ensure you have the input field as seen in the mock-up: expected 2 to equal 1",
                "estack": "AssertionError: Ensure you have the input field as seen in the mock-up: expected 2 to equal 1\n    at Context.<anonymous> (landing_page.js:115:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 2\n+ 1\n"
              },
              "uuid": "5b819601-4ff2-41d1-af9c-a34aecabc195",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert placeholder",
              "fullTitle": "Testing Scholars Project test case: assert placeholder",
              "timedOut": false,
              "duration": 27,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('placeholder');\nassert.equal(element, \"Enter your delivery address\", `Ensure you have the placeholder as seen in the mock-up`);",
              "err": {
                "message": "AssertionError: Ensure you have the placeholder as seen in the mock-up: expected 'Where are you?' to equal 'Enter your delivery address'",
                "estack": "AssertionError: Ensure you have the placeholder as seen in the mock-up: expected 'Where are you?' to equal 'Enter your delivery address'\n    at Context.<anonymous> (landing_page.js:120:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Where are you?\n+ Enter your delivery address\n"
              },
              "uuid": "469b66dc-a392-4e26-ad3a-2b38695172ea",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert placeholder",
              "fullTitle": "Testing Scholars Project test case: assert placeholder",
              "timedOut": false,
              "duration": 23,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('label');\nassert.equal(element, \"Where are you?\", `Ensure you have the input field as the appropriate label as seen in the mock-up`);",
              "err": {
                "message": "AssertionError: Ensure you have the input field as the appropriate label as seen in the mock-up: expected null to equal 'Where are you?'",
                "estack": "AssertionError: Ensure you have the input field as the appropriate label as seen in the mock-up: expected null to equal 'Where are you?'\n    at Context.<anonymous> (landing_page.js:125:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "d69e1409-4f3f-4d0e-ad1c-52b5e571505d",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert image amount is 10",
              "fullTitle": "Testing Scholars Project test case: assert image amount is 10",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const images = await driver.findElements(By.css('img'));\nconst size = images.length\nassert.equal(size, 10, `Ensure all the images are present on the page`);",
              "err": {},
              "uuid": "3a7c3dc1-17df-4d4a-9edc-fcfa65cba239",
              "parentUUID": "431af422-3f6d-4b16-af9e-d2da1690b3bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2808b933-b93e-4b04-bcc9-3e4147fbb882",
            "d9f358b0-3a8e-4388-b376-cb3aafcef050",
            "391dc22d-e20a-47c0-afd3-2f4138707ab3",
            "adc77a4b-a1cd-4750-8379-3fe5b82fd1b3",
            "b1385f3a-fa89-458f-830d-6dd39811eef5",
            "50247d7b-4a18-4d2b-8517-b9f3062af945",
            "8d8deb64-eb12-4a3b-8a0e-fcd4d927675b",
            "c99250f1-abc6-4d42-bdbc-cd48137453c4",
            "176cbd17-2212-4359-843e-308890fe4901",
            "3e15437a-88b4-4753-9a1b-7cb181a768f8",
            "1f86ee9c-163d-4303-804e-a10bcadcb9ff",
            "5af0be59-e36c-4856-ad54-2a8767243b57",
            "2e06b21c-a45f-4269-a903-b129db8862d8",
            "e1c3057c-ae2b-48a1-ae1c-9161d63ccb51",
            "3a7c3dc1-17df-4d4a-9edc-fcfa65cba239"
          ],
          "failures": [
            "5b819601-4ff2-41d1-af9c-a34aecabc195",
            "469b66dc-a392-4e26-ad3a-2b38695172ea",
            "d69e1409-4f3f-4d0e-ad1c-52b5e571505d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 545,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/jeffkayombo/Desktop/Dufuna-CodeCamp-21/tests/landing_page/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "5.2.0"
    }
  }
}