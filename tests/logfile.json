{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-01T12:37:41.663Z",
    "end": "2022-03-01T12:40:41.848Z",
    "duration": 180185,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 3,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "35e33e6b-c7fc-4849-876d-f2786be9e1bc",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "77550647-83e3-45d6-b8cf-8083696f31f1",
          "title": "Testing Scholars Project",
          "fullFile": "C:\\Users\\user\\Documents\\GitHub\\Dufuna-CodeCamp-21\\tests\\Dom\\dom.js",
          "file": "\\dom.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver for \"test case: check dropdown\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver for \"test case: check dropdown\"",
              "timedOut": true,
              "duration": 180018,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {
                "message": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\user\\Documents\\GitHub\\Dufuna-CodeCamp-21\\tests\\Dom\\dom.js)",
                "estack": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\user\\Documents\\GitHub\\Dufuna-CodeCamp-21\\tests\\Dom\\dom.js)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
                "diff": null
              },
              "uuid": "eae36c25-525f-4d20-973c-8fcf2d32647e",
              "parentUUID": "77550647-83e3-45d6-b8cf-8083696f31f1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "1e514241-f496-44dd-92ab-41113336485f",
              "parentUUID": "77550647-83e3-45d6-b8cf-8083696f31f1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: check dropdown",
              "fullTitle": "Testing Scholars Project test case: check dropdown",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"select\")).isDisplayed();\nassert(element == true)",
              "err": {},
              "uuid": "1ba7659b-f42e-48a3-89c2-970840ec275c",
              "parentUUID": "77550647-83e3-45d6-b8cf-8083696f31f1",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check options in dropdown",
              "fullTitle": "Testing Scholars Project test case: check options in dropdown",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.findElement(By.css(\"select\")).click();\nconst option = await driver.findElement(By.css(\"option\")).isDisplayed();\nassert(option == true)",
              "err": {},
              "uuid": "1bd77bf8-b129-4f34-8486-77ca2a60433c",
              "parentUUID": "77550647-83e3-45d6-b8cf-8083696f31f1",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check options in dropdown",
              "fullTitle": "Testing Scholars Project test case: check options in dropdown",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.findElement(By.css(\"select\")).click();\nconst options = await driver.findElements(By.css(\"option\"));\nconst first_option = options[1];\noptions.forEach(option => validateImage(option, first_option));\nasync function validateImage(item, arr) {\n    arr = item.click();\n    const images = await driver.findElements(By.css(\"img\"));\n    const validate = images.length\n    assert.equal(validate, 10, `Ensure the images change when you click on any option`)\n}",
              "err": {},
              "uuid": "c044d778-7b9c-41f6-85c4-08a0996c3b8f",
              "parentUUID": "77550647-83e3-45d6-b8cf-8083696f31f1",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "1ba7659b-f42e-48a3-89c2-970840ec275c",
            "1bd77bf8-b129-4f34-8486-77ca2a60433c",
            "c044d778-7b9c-41f6-85c4-08a0996c3b8f"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/user/Documents/GitHub/Dufuna-CodeCamp-21/tests/Dom/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.0.1"
    }
  }
}