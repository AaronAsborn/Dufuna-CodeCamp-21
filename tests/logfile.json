{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 3,
    "pending": 0,
    "failures": 2,
    "start": "2021-09-14T16:33:27.377Z",
    "end": "2021-09-14T16:33:32.241Z",
    "duration": 4864,
    "testsRegistered": 5,
    "passPercent": 60,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "41216bd7-7308-4981-bb75-682b6776853d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6b11d242-089f-46c4-a1d4-22dbdaf7a044",
          "title": "Testing Form Task",
          "fullFile": "C:\\Users\\CTDO\\Desktop\\Dufuna-CodeCamp-21\\tests\\html_forms\\html_form.js",
          "file": "\\html_form.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver in \"Testing Form Task\"",
              "fullTitle": "Testing Form Task \"before all\" hook: setupWebdriver in \"Testing Form Task\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url)",
              "err": {},
              "uuid": "78a45974-9c31-4731-b070-024f68e10c09",
              "parentUUID": "6b11d242-089f-46c4-a1d4-22dbdaf7a044",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Form Task\"",
              "fullTitle": "Testing Form Task \"after all\" hook in \"Testing Form Task\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "cfc53402-0be8-40d6-a6fb-e523a493d364",
              "parentUUID": "6b11d242-089f-46c4-a1d4-22dbdaf7a044",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: assert 4 input fields are present",
              "fullTitle": "Testing Form Task test case: assert 4 input fields are present",
              "timedOut": true,
              "duration": 2016,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 4, `Ensure you have all the input fields in the order stated in the task criteria`);",
              "err": {
                "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\CTDO\\Desktop\\Dufuna-CodeCamp-21\\tests\\html_forms\\html_form.js)",
                "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\CTDO\\Desktop\\Dufuna-CodeCamp-21\\tests\\html_forms\\html_form.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
                "diff": null
              },
              "uuid": "69c1c8ff-d0ea-4d55-88b6-07c95d45a4c9",
              "parentUUID": "6b11d242-089f-46c4-a1d4-22dbdaf7a044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: Full Name label is present",
              "fullTitle": "Testing Form Task test case: Full Name label is present",
              "timedOut": true,
              "duration": 2006,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nconst fullname = await text.toLowerCase();\nassert.include(fullname, \"full name\", `Ensure \"Full Name\" label is present`);",
              "err": {
                "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\CTDO\\Desktop\\Dufuna-CodeCamp-21\\tests\\html_forms\\html_form.js)",
                "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\CTDO\\Desktop\\Dufuna-CodeCamp-21\\tests\\html_forms\\html_form.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
                "diff": null
              },
              "uuid": "a5ef875c-a360-4261-9021-062e7d067617",
              "parentUUID": "6b11d242-089f-46c4-a1d4-22dbdaf7a044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: Email label is present",
              "fullTitle": "Testing Form Task test case: Email label is present",
              "timedOut": false,
              "duration": 597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nconst email = await text.toLowerCase();\nassert.include(email, \"email\", `Ensure \"Email\" label is present`);",
              "err": {},
              "uuid": "18a6ff30-9a51-470b-b186-95143d1ffbbe",
              "parentUUID": "6b11d242-089f-46c4-a1d4-22dbdaf7a044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: Subject label is present",
              "fullTitle": "Testing Form Task test case: Subject label is present",
              "timedOut": false,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nconst subject = await text.toLowerCase();\nassert.include(subject, \"subject\", `Ensure \"Subject\" label is present`);",
              "err": {},
              "uuid": "706d29c5-c2cb-46a4-a854-2d5d9cae121e",
              "parentUUID": "6b11d242-089f-46c4-a1d4-22dbdaf7a044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: Message label is present",
              "fullTitle": "Testing Form Task test case: Message label is present",
              "timedOut": false,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nconst message = await text.toLowerCase();\nassert.include(message, \"message\", `Ensure \"Message\" label is present`);",
              "err": {},
              "uuid": "d445a73f-d07a-4fad-a724-a4558989e1f3",
              "parentUUID": "6b11d242-089f-46c4-a1d4-22dbdaf7a044",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18a6ff30-9a51-470b-b186-95143d1ffbbe",
            "706d29c5-c2cb-46a4-a854-2d5d9cae121e",
            "d445a73f-d07a-4fad-a724-a4558989e1f3"
          ],
          "failures": [
            "69c1c8ff-d0ea-4d55-88b6-07c95d45a4c9",
            "a5ef875c-a360-4261-9021-062e7d067617"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4801,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.0.3"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/CTDO/Desktop/Dufuna-CodeCamp-21/tests/html_forms/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "5.2.0"
    }
  }
}