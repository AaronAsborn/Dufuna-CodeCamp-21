{
  "stats": {
    "suites": 1,
    "tests": 18,
    "passes": 15,
    "pending": 0,
    "failures": 3,
    "start": "2021-06-17T13:15:40.234Z",
    "end": "2021-06-17T13:15:47.923Z",
    "duration": 7689,
    "testsRegistered": 18,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c11d51b8-8f45-46f4-9a46-295b391d0a3c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "78e029c0-ec56-465a-9845-f9960c3c371e",
          "title": "Testing Scholars Project",
          "fullFile": "/Users/jeffkayombo/Desktop/Dufuna-CodeCamp-21/tests/landing_page/landing_page.js",
          "file": "/landing_page.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"before all\" hook: setupWebdriver in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 7060,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {},
              "uuid": "1323e491-7a9a-47ba-a296-37ea1f80ebb5",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Testing Scholars Project\"",
              "fullTitle": "Testing Scholars Project \"after all\" hook in \"Testing Scholars Project\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "07eaf3ac-b618-47c0-a440-475fb3b9e81c",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Food\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "6c644f67-d2d2-47f5-8773-cdb94009e592",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag Logo is present",
              "fullTitle": "Testing Scholars Project test case: FoodBag Logo is present",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"Bag\", `Ensure \"food bag\" text is present on header`);",
              "err": {},
              "uuid": "101d3cb2-3118-457f-9e7f-42eb557619af",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: FoodBag text is present on the page",
              "fullTitle": "Testing Scholars Project test case: FoodBag text is present on the page",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const name = await driver.findElement(By.css(\"body\"));\nconst text = await name.getText();\nassert.include(text, \"FoodBag\", `Ensure \"FoodBag\" text is present`);",
              "err": {},
              "uuid": "3dd36f82-d3d9-4d22-89b9-1eb8b702d297",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Login",
              "fullTitle": "Testing Scholars Project test case: check Login",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Login\", \"Ensure the `Login` link is present on the header\");",
              "err": {},
              "uuid": "fcf25c8a-677a-4aa1-b3a2-5d588d032fa8",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Cart",
              "fullTitle": "Testing Scholars Project test case: check Cart",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Cart\", \"Ensure the `Cart` link is present on the header\");",
              "err": {},
              "uuid": "7b2c81e1-6dd9-441a-96a7-3cb73d05cc7f",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check Sign up",
              "fullTitle": "Testing Scholars Project test case: check Sign up",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Sign up\", \"Ensure the `Sign up` link is present on the header\");",
              "err": {},
              "uuid": "9437264f-19c1-44b2-9515-0e2eb95c634f",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-descrption1",
              "fullTitle": "Testing Scholars Project test case: check service-descrption1",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Pick an interest\", \"Ensure Quantity label is present\");",
              "err": {},
              "uuid": "25245a84-0041-4aed-b768-f0b22c1b2db1",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-description2",
              "fullTitle": "Testing Scholars Project test case: check service-description2",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"How we serve you\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "331fd81c-aa74-4ded-9f82-5d5fe6cbc3e7",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service title-1",
              "fullTitle": "Testing Scholars Project test case: check service title-1",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us where you are\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "fc5f7f58-da42-4e09-8dc6-4ff4af78fb44",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-2",
              "fullTitle": "Testing Scholars Project test case: check service-title-2",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"Tell us what you want\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "9f86cdc6-064e-4472-a358-b2df99ca5080",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check service-title-3",
              "fullTitle": "Testing Scholars Project test case: check service-title-3",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"))\nconst text = await element.getText();\nassert.include(text, \"We'll come running\", \"Ensure you have the appropriate text for the service\");",
              "err": {},
              "uuid": "f3771887-9909-474f-a0a9-1b396e18ee90",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check footer",
              "fullTitle": "Testing Scholars Project test case: check footer",
              "timedOut": false,
              "duration": 29,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Contact us\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {
                "message": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Terms & Conditions . Privacy Policy\\n©Copyright 2021 Foodbag is a registered trademark' to include 'Contact us'",
                "estack": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Terms & Conditions . Privacy Policy\\n©Copyright 2021 Foodbag is a registered trademark' to include 'Contact us'\n    at Context.<anonymous> (landing_page.js:97:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "d5561fcd-d466-4ec9-b83b-394daa53ac82",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check terms & conditions on footer",
              "fullTitle": "Testing Scholars Project test case: check terms & conditions on footer",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"Terms & Conditions . Privacy Policy\", \"Ensure the texts on the footer is properly formated\");",
              "err": {},
              "uuid": "e26d7add-5485-47ac-a7fe-a66d184f3fc9",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: check copyright on footer",
              "fullTitle": "Testing Scholars Project test case: check copyright on footer",
              "timedOut": false,
              "duration": 16,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"footer\"))\nconst text = await element.getText();\nassert.include(text, \"© Copyright 2021 FoodBag is a registered trademark\", \"Ensure you have the appropriate text as seen on the mock-up\");",
              "err": {
                "message": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Terms & Conditions . Privacy Policy\\n©Copyright 2021 Foodbag is a registered trademark' to include '© Copyright 2021 FoodBag is a registered trademark'",
                "estack": "AssertionError: Ensure you have the appropriate text as seen on the mock-up: expected 'Terms & Conditions . Privacy Policy\\n©Copyright 2021 Foodbag is a registered trademark' to include '© Copyright 2021 FoodBag is a registered trademark'\n    at Context.<anonymous> (landing_page.js:109:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "68511af2-1976-4c7c-a429-7f5ec492fa33",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert input field is present",
              "fullTitle": "Testing Scholars Project test case: assert input field is present",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const input = await driver.findElements(By.css('input'));\nconst size = input.length\nassert.equal(size, 1, `Ensure you have the input field as seen in the mock-up`);",
              "err": {},
              "uuid": "15513042-0239-4b90-b62e-267d9729b2ae",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert placeholder",
              "fullTitle": "Testing Scholars Project test case: assert placeholder",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('placeholder');\nassert.equal(element, \"Enter your delivery address\", `Ensure you have the placeholder as seen in the mock-up`);",
              "err": {},
              "uuid": "65093730-5764-4f82-ba93-768d0a57a8a5",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert placeholder",
              "fullTitle": "Testing Scholars Project test case: assert placeholder",
              "timedOut": false,
              "duration": 22,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css('input')).getAttribute('label');\nassert.equal(element, \"Where are you?\", `Ensure you have the input field as the appropriate label as seen in the mock-up`);",
              "err": {
                "message": "AssertionError: Ensure you have the input field as the appropriate label as seen in the mock-up: expected null to equal 'Where are you?'",
                "estack": "AssertionError: Ensure you have the input field as the appropriate label as seen in the mock-up: expected null to equal 'Where are you?'\n    at Context.<anonymous> (landing_page.js:125:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "e75d3a28-9944-4905-a49b-b14bd92f6129",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test case: assert image amount is 10",
              "fullTitle": "Testing Scholars Project test case: assert image amount is 10",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const images = await driver.findElements(By.css('img'));\nconst size = images.length\nassert.equal(size, 10, `Ensure all the images are present on the page`);",
              "err": {},
              "uuid": "4f77f6b4-9a49-489b-b57b-a113a37bc2a4",
              "parentUUID": "78e029c0-ec56-465a-9845-f9960c3c371e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c644f67-d2d2-47f5-8773-cdb94009e592",
            "101d3cb2-3118-457f-9e7f-42eb557619af",
            "3dd36f82-d3d9-4d22-89b9-1eb8b702d297",
            "fcf25c8a-677a-4aa1-b3a2-5d588d032fa8",
            "7b2c81e1-6dd9-441a-96a7-3cb73d05cc7f",
            "9437264f-19c1-44b2-9515-0e2eb95c634f",
            "25245a84-0041-4aed-b768-f0b22c1b2db1",
            "331fd81c-aa74-4ded-9f82-5d5fe6cbc3e7",
            "fc5f7f58-da42-4e09-8dc6-4ff4af78fb44",
            "9f86cdc6-064e-4472-a358-b2df99ca5080",
            "f3771887-9909-474f-a0a9-1b396e18ee90",
            "e26d7add-5485-47ac-a7fe-a66d184f3fc9",
            "15513042-0239-4b90-b62e-267d9729b2ae",
            "65093730-5764-4f82-ba93-768d0a57a8a5",
            "4f77f6b4-9a49-489b-b57b-a113a37bc2a4"
          ],
          "failures": [
            "d5561fcd-d466-4ec9-b83b-394daa53ac82",
            "68511af2-1976-4c7c-a429-7f5ec492fa33",
            "e75d3a28-9944-4905-a49b-b14bd92f6129"
          ],
          "pending": [],
          "skipped": [],
          "duration": 606,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/jeffkayombo/Desktop/Dufuna-CodeCamp-21/tests/landing_page/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "5.2.0"
    }
  }
}